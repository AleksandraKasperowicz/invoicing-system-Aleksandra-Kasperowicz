buildscript {
    ext {
        flywayVersion = '9.8.1'
        lombokVersion = '1.18.24'
        spockVersion = '2.0-groovy-3.0'
        springBootVersion = '2.7.8'
        springDependencyManagmentVersion = '1.1.0'
        groovyVersion = '3.0.9'
        fasterxmlVersion = '2.11.1'
        springfoxVersion = '3.0.0'
        springFoxUiVersion = '3.0.0'
    }
}
plugins {
    // Apply the groovy plugin to also add support for Groovy (needed for Spock)
    id 'groovy'
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'checkstyle'
    id 'jacoco'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagmentVersion}"
    id "org.flywaydb.flyway" version "9.8.1"
}


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    compile "org.flywaydb:flyway-core:${flywayVersion}"
    // Use the latest Groovy version for Spock testing
    testImplementation "org.codehaus.groovy:groovy:${groovyVersion}"

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation "org.spockframework:spock-core:${spockVersion}"
    testImplementation "org.spockframework:spock-spring:${spockVersion}"
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.springframework.boot:spring-boot-starter-test"

    // This dependency is used by the application.
    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation "com.fasterxml.jackson.core:jackson-databind:${fasterxmlVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${fasterxmlVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation "org.springframework.boot:spring-boot-starter-web"

    implementation "io.springfox:springfox-boot-starter:${springfoxVersion}"
    implementation "io.springfox:springfox-swagger-ui:${springfoxVersion}"

    implementation "org.flywaydb:flyway-core:${flywayVersion}"

    runtimeOnly "com.h2database:h2:1.4.200"
    runtimeOnly "org.postgresql:postgresql:42.2.19"
}

application {
    // Define the main class for the application.
    mainClass = 'pl.futurecollars.invoicing.App'
}

checkstyle {
    showViolations = true
    ignoreFailures = false
    maxWarnings = 0
    maxErrors = 0
}

jacoco {
    applyTo run
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.named('build') {
    finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.8
            }
        }
    }
}
task testWithFileDatabase(type: Test) {
    systemProperty 'spring.profiles.active', 'file'
}

task testWithMemoryDatabase(type: Test) {
    systemProperty 'spring.profiles.active', 'memory'
}

task testWithSqlDatabase(type: Test) {
    systemProperty 'spring.profiles.active', 'sql'
}
check.dependsOn testWithFileDatabase
check.dependsOn testWithMemoryDatabase

